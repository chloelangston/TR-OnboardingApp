{{#if error}}
	<div class="alert alert-danger" role="alert">{{error}}</div>
{{/if}}

<!-- <h1>Upload a File</h1>
<form method="post" action="/upload" enctype="multipart/form-data">
	<input type="file" name="file">
	<button type="submit" class="btn btn-lg btn-success">Upload</button>
</form>

<h1>{{email}}'s Files</h1>
<ul class="media-list">
	{{#each files as |file|}}
		<li class="media" id="{{file.id}}">
			<div class="media-left">
				<img src="/thumbnail/{{file.id}}" alt="" />
			</div>
			<div class="media-body">
				{{file.name}}
				<a href="/download/{{file.id}}" class="btn btn-primary">Download</a>
				<a href="/preview/{{file.id}}" class="btn btn-primary">Preview</a>
			</div>
		</li>
	{{/each}}
</ul> -->



<head>
  <style>
     #map {
      height: 400px;
      width: 100%;
     }
  </style>
</head>
<body>
  <h3>My Google Maps Demo</h3>
	<ul>
		{{#each markers as |marker|}}
		<li class="markers">{{marker.lat}}|{{marker.lng}}</li>
		{{/each}}
	</ul>
  <div id="map"></div>
  <script>
		function initMap(markers) {
			var mapMarkers = [];
			var uluru = {lat: -25.363, lng: 131.044};
			pins = [];
			markers = document.getElementsByClassName('markers');
			for(var i=0; i<markers.length; i++) {
				var node = markers[i],
					temp = node.innerHTML.split('|'),
					lat = parseFloat(temp[0]),
					lng = parseFloat(temp[1]);
					pins.push({lat: lat, lng: lng});
			}
			// markers = [uluru];
			// $('.markers').
			console.log(pins);
			var map = new google.maps.Map(document.getElementById('map'), {
				zoom: 2,
				center: uluru,
				styles: [
					  {
					    "elementType": "geometry",
					    "stylers": [
					      {
					        "color": "#ebe3cd"
					      }
					    ]
					  },
					  {
					    "elementType": "labels.text.fill",
					    "stylers": [
					      {
					        "color": "#523735"
					      }
					    ]
					  },
					  {
					    "elementType": "labels.text.stroke",
					    "stylers": [
					      {
					        "color": "#f5f1e6"
					      }
					    ]
					  },
					  {
					    "featureType": "administrative",
					    "elementType": "geometry.stroke",
					    "stylers": [
					      {
					        "color": "#c9b2a6"
					      }
					    ]
					  },
					  {
					    "featureType": "administrative.land_parcel",
					    "elementType": "geometry.stroke",
					    "stylers": [
					      {
					        "color": "#dcd2be"
					      }
					    ]
					  },
					  {
					    "featureType": "administrative.land_parcel",
					    "elementType": "labels.text.fill",
					    "stylers": [
					      {
					        "color": "#ae9e90"
					      }
					    ]
					  },
					  {
					    "featureType": "landscape.natural",
					    "elementType": "geometry",
					    "stylers": [
					      {
					        "color": "#dfd2ae"
					      }
					    ]
					  },
					  {
					    "featureType": "poi",
					    "elementType": "geometry",
					    "stylers": [
					      {
					        "color": "#dfd2ae"
					      }
					    ]
					  },
					  {
					    "featureType": "poi",
					    "elementType": "labels.text.fill",
					    "stylers": [
					      {
					        "color": "#93817c"
					      }
					    ]
					  },
					  {
					    "featureType": "poi.park",
					    "elementType": "geometry.fill",
					    "stylers": [
					      {
					        "color": "#a5b076"
					      }
					    ]
					  },
					  {
					    "featureType": "poi.park",
					    "elementType": "labels.text.fill",
					    "stylers": [
					      {
					        "color": "#447530"
					      }
					    ]
					  },
					  {
					    "featureType": "road",
					    "elementType": "geometry",
					    "stylers": [
					      {
					        "color": "#f5f1e6"
					      }
					    ]
					  },
					  {
					    "featureType": "road.arterial",
					    "elementType": "geometry",
					    "stylers": [
					      {
					        "color": "#fdfcf8"
					      }
					    ]
					  },
					  {
					    "featureType": "road.highway",
					    "elementType": "geometry",
					    "stylers": [
					      {
					        "color": "#f8c967"
					      }
					    ]
					  },
					  {
					    "featureType": "road.highway",
					    "elementType": "geometry.stroke",
					    "stylers": [
					      {
					        "color": "#e9bc62"
					      }
					    ]
					  },
					  {
					    "featureType": "road.highway.controlled_access",
					    "elementType": "geometry",
					    "stylers": [
					      {
					        "color": "#e98d58"
					      }
					    ]
					  },
					  {
					    "featureType": "road.highway.controlled_access",
					    "elementType": "geometry.stroke",
					    "stylers": [
					      {
					        "color": "#db8555"
					      }
					    ]
					  },
					  {
					    "featureType": "road.local",
					    "elementType": "labels.text.fill",
					    "stylers": [
					      {
					        "color": "#806b63"
					      }
					    ]
					  },
					  {
					    "featureType": "transit.line",
					    "elementType": "geometry",
					    "stylers": [
					      {
					        "color": "#dfd2ae"
					      }
					    ]
					  },
					  {
					    "featureType": "transit.line",
					    "elementType": "labels.text.fill",
					    "stylers": [
					      {
					        "color": "#8f7d77"
					      }
					    ]
					  },
					  {
					    "featureType": "transit.line",
					    "elementType": "labels.text.stroke",
					    "stylers": [
					      {
					        "color": "#ebe3cd"
					      }
					    ]
					  },
					  {
					    "featureType": "transit.station",
					    "elementType": "geometry",
					    "stylers": [
					      {
					        "color": "#dfd2ae"
					      }
					    ]
					  },
					  {
					    "featureType": "water",
					    "elementType": "geometry.fill",
					    "stylers": [
					      {
					        "color": "#b9d3c2"
					      }
					    ]
					  },
					  {
					    "featureType": "water",
					    "elementType": "labels.text.fill",
					    "stylers": [
					      {
					        "color": "#92998d"
					      }
					    ]
					  }
					]
			});
			var icon = 'http://teamrubiconusa.org/app/uploads/2016/07/cropped-X_large-32x32.png'
			pins.forEach(function(item, index){
				console.log("item", item)
				mapMarkers.push(new google.maps.Marker({
					position: item,
					icon: icon,
					map: map
				}));
			})

		}
  </script>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCIS3aoMV_m1hJ7aNCarutjEGHUVM0X_rk&callback=initMap">
  </script>
</body>
